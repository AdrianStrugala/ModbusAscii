/*
 * main.c
 *
 *  Created on: 8 mar 2016
 *      Author: LAB320-1552
 */


/**************************************/
/*              ARE 2008              */
/*      e-mail: biuro@are.net.pl      */
/*      www   : are.net.pl            */
/**************************************/

#define F_CPU 8000000UL  // 8 MHz
#include <avr/io.h>
#include <stdio.h>
#include <util/delay.h>
#include <string.h>
#include <avr/interrupt.h>
#include <avr/signal.h>

#define BAUD 9600 //predkosc zlacza
#define BAUDRATE ((F_CPU)/(BAUD*16UL)-1)



void delay_ms(int ms)
	{
	volatile long unsigned int i;
	for(i=0;i<ms;i++)
		_delay_ms(1);
	}

void delay_us(int us)
	{
	volatile long unsigned int i;
	for(i=0;i<us;i++)
		_delay_us(1);
	}


#define RS 0
#define RW 1
#define E  2

void LCD2x16_init(void)
{
PORTA &= ~(1<<RS);
PORTA &= ~(1<<RW);

PORTA |= (1<<E);
PORTC = 0x38;   // dwie linie, 5x7 punktow
PORTA &=~(1<<E);
_delay_us(120);

PORTA |= (1<<E);
PORTC = 0x0e;   // wlacz wyswietlacz, kursor, miganie
PORTA &=~(1<<E);
_delay_us(120);

PORTA |= (1<<E);
PORTC = 0x06;
PORTA &=~(1<<E);
_delay_us(120);
}

void LCD2x16_clear(void){
PORTA &= ~(1<<RS);
PORTA &= ~(1<<RW);

PORTA |= (1<<E);
PORTC = 0x01;
PORTA &=~(1<<E);
delay_ms(120);
}

void LCD2x16_putchar(int data)
{
PORTA |= (1<<RS);
PORTA &= ~(1<<RW);

PORTA |= (1<<E);
PORTC = data;
PORTA &=~(1<<E);
_delay_us(120);
}

void LCD2x16_pos(int wiersz, int kolumna)
{
PORTA &= ~(1<<RS);
PORTA &= ~(1<<RW);

PORTA |= (1<<E);
delay_ms(1);
PORTC = 0x80+(wiersz-1)*0x40+(kolumna-1);
delay_ms(1);
PORTA &=~(1<<E);
_delay_us(120);
}



void uart_init(void)
{
	UBRRH = (BAUDRATE >> 8);
	UBRRL = BAUDRATE;
	UCSRB = (1<<TXEN)|(1<<RXEN)|(1<<RXC); //wlacz nadajnik i odbiornik oraz przerwania
	UCSRC = (1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
}

void wyslij_dane(char *dane)
{
	int rozmiar = 0;
	int i=0;
	rozmiar = strlen(dane);
	for(i=0;i<rozmiar;i++)
	{
		wyslij_znak(dane[i]);
	}
}

void wyslij_znak(unsigned char znak)
{
	while(!(UCSRA&(1<<UDRE))); //czeka na wyslanie poprzednej danej
	UDR=znak;
}

uint8_t odbierz(void)
{
	while(!(UCSRA&(1<<RXC))); //dopoki nie ma czystego buforu
	return UDR; //zwroc wartosc
}


//funkcja licz¹ca CRC
unsigned int crc_chk(unsigned char *data, unsigned char length)
{
        int i;
        unsigned int reg_crc=0xFFFF;

        while(length--) {
                reg_crc ^= *data++;
                for(i=0;i<8;i++) {
                        if( reg_crc & 0x01 ) { /*LSB(bit 0) = 1 */
                                reg_crc = (reg_crc >> 1)^0xA001;
                        } else {
                                reg_crc = (reg_crc>>1);
                        }
                }
        }
        return reg_crc;
}

int flaga =0;

int main(void){

char ramka[] = "0x12<2:dane>stop";

DDRC = 0xff;
PORTC = 0x00;
DDRA = 0xff;
PORTA = 0x00;

//diody
DDRD  |= (1<<PD6) | (1<<PD7);
PORTD |= (1<<PD6) | (1<<PD7);

_delay_ms(200);

uart_init();
LCD2x16_init();
LCD2x16_clear();
sei(); //wlaczenie przerwan

wyslij_dane(ramka);
for(;;)
{
}
return 0;
}


ISR(USART_RXC_vect)  //funkcja obslugujaca przerwanie
{
char znak = UDR;
if(znak=='1')
	PORTD ^= (1<<PD6);
if(znak=='2')
	PORTD ^= (1<<PD7);

if(znak=='<')
	{
	flaga=1;
	}
if(znak=='>')
	{
	flaga=0;
	}
if((flaga==1) && (znak!='<'))
{
	LCD2x16_putchar(znak);
}
}
